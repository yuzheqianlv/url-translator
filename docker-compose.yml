version: '3.8'

services:
  # 主应用服务
  url-translator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-translator
    ports:
      - "3001:80"
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      # 后端API连接配置
      - BACKEND_API_URL=http://backend:3002
      - POSTGRES_URL=postgres://admin:${POSTGRES_PASSWORD}@postgres:5432/markdown_manager
      - REDIS_URL=redis://redis:6379
      - MEILISEARCH_URL=http://meilisearch:7700
      - MEILISEARCH_API_KEY=${MEILI_MASTER_KEY}
    depends_on:
      - postgres
      - redis
      - meilisearch
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.url-translator.rule=Host(`localhost`)"
      - "traefik.http.services.url-translator.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - url-translator-network

  # 后端API服务 (待开发)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: url-translator-backend
    ports:
      - "3002:3002"
    restart: unless-stopped
    environment:
      - RUST_LOG=info
      - PORT=3002
      - DATABASE_URL=postgres://admin:${POSTGRES_PASSWORD}@postgres:5432/markdown_manager
      - REDIS_URL=redis://redis:6379
      - MEILISEARCH_URL=http://meilisearch:7700
      - MEILISEARCH_API_KEY=${MEILI_MASTER_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
      - meilisearch
    networks:
      - url-translator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=markdown_manager
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - url-translator-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d markdown_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MeiliSearch 搜索引擎
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: meilisearch
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - MEILI_ENV=production
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_DB_PATH=/meili_data
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - url-translator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - url-translator-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  url-translator-network:
    driver: bridge

volumes:
  nginx_cache:
    driver: local
  postgres_data:
    driver: local
  meilisearch_data:
    driver: local
  redis_data:
    driver: local